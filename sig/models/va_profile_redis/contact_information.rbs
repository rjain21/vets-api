module VAProfileRedis
  # Facade for VAProfile::ContactInformation::Service. The user_serializer delegates
  # to this class through the User model.
  #
  # When a person is requested from the serializer, it returns either a cached
  # response in Redis or from the VAProfile::ContactInformation::Service.
  #
  class ContactInformation < Common::RedisStore
    @response: untyped

    @service: untyped

    include Common::CacheAside

    # @return [User] the user being queried in VA Profile
    #
    attr_accessor user: untyped

    def self.for_user: (untyped user) -> untyped

    # Returns the user's email model. In VA Profile, a user can only have one
    # email address.
    #
    # @return [VAProfile::Models::Email] The user's one email address model
    #
    def email: () -> (nil | untyped)

    # Returns the user's residence. In VA Profile, a user can only have one
    # residence address.
    #
    # @return [VAProfile::Models::Address] The user's one residential address model
    #
    def residential_address: () -> (nil | untyped)

    # Returns the user's mailing address. In VA Profile, a user can only have one
    # mailing address.
    #
    # @return [VAProfile::Models::Address] The user's one mailing address model
    #
    def mailing_address: () -> (nil | untyped)

    # Returns the user's home phone. In VA Profile, a user can only have one
    # home phone.
    #
    # @return [VAProfile::Models::Telephone] The user's one home phone model
    #
    def home_phone: () -> (nil | untyped)

    # Returns the user's mobile phone. In VA Profile, a user can only have one
    # mobile phone.
    #
    # @return [VAProfile::Models::Telephone] The user's one mobile phone model
    #
    def mobile_phone: () -> (nil | untyped)

    # Returns the user's work phone. In VA Profile, a user can only have one
    # work phone.
    #
    # @return [VAProfile::Models::Telephone] The user's one work phone model
    #
    def work_phone: () -> (nil | untyped)

    # Returns the user's temporary phone. In VA Profile, a user can only have one
    # temporary phone.
    #
    # @return [VAProfile::Models::Telephone] The user's one temporary phone model
    #
    def temporary_phone: () -> (nil | untyped)

    # Returns the user's fax number. In VA Profile, a user can only have one
    # fax number.
    #
    # @return [VAProfile::Models::Telephone] The user's one fax number model
    #
    def fax_number: () -> (nil | untyped)

    # Returns the user's text permission. In VA Profile, a user can only have one
    # text permission.
    #
    # @return [VAProfile::Models::Permission] The user's one text permission model
    #
    def text_permission: () -> (nil | untyped)

    # The status of the last VAProfile::ContactInformation::Service response,
    # or not authorized for for users < LOA 3
    #
    # @return [Integer <> String] the status of the last VAProfile::ContactInformation::Service response
    #
    def status: () -> untyped

    # @return [VAProfile::ContactInformation::PersonResponse] the response returned from
    # the redis cache.  If that is unavailable, it calls the
    # VAProfile::ContactInformation::Service#get_person endpoint.
    #
    def response: () -> untyped

    # This method allows us to populate the local instance of a
    # VAProfileRedis::ContactInformation object with the uuid necessary
    # to perform subsequent actions on the key such as deletion.
    def populate_from_redis: () -> untyped

    private

    def value_for: (untyped key) -> untyped

    def dig_out: (untyped key, untyped type, untyped matcher) -> (nil | untyped)

    def response_from_redis_or_service: () -> untyped

    def contact_info_service: () -> untyped
  end
end
