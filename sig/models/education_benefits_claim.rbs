class EducationBenefitsClaim < ApplicationRecord
  @application: untyped

  FORM_TYPES: ::Array["1990" | "1995" | "1990e" | "5490" | "5495" | "1990n" | "0993" | "0994" | "10203" | "1990s"]

  APPLICATION_TYPES: ::Array["chapter33" | "chapter1607" | "chapter1606" | "chapter32" | "chapter35" | "transfer_of_entitlement" | "vettec" | "chapter30" | "vrrap"]

  # For console access only, right now.
  def reprocess_at: (untyped region) -> untyped

  def confirmation_number: () -> ::String

  def form_type: () -> untyped

  # This converts the form data into an OpenStruct object so that the template
  # rendering can be cleaner. Piping it through the JSON serializer was a quick
  # and easy way to deeply transform the object.
  def open_struct_form: () -> untyped

  def transform_form: () -> untyped

  def copy_from_previous_benefits: () -> (untyped | nil)

  def generate_benefits_to_apply_to: () -> untyped

  def self.unprocessed: () -> untyped

  def region: () -> untyped

  def regional_office: () -> untyped

  def selected_benefits: () -> untyped

  def self.form_headers: (?untyped form_types) -> untyped

  private

  def create_education_benefits_submission: () -> untyped

  def update_education_benefits_submission_status: () -> (untyped | nil)

  def set_region: () -> untyped
end
